"""
SECUENCIA DE FIBONACCI

EXPLICACION:

- 1: INDICAR EL INICIO CON UNA LISTA, LA LISTA
DEBE TENER EN SU CONTENIDO EL 0 Y EL 1, NUMEROS NECESARIOS 
PARA INICIAR CON LA ESPIRAL.

- 2: EL SEGUNDO PASO ES INDICAR LA CANTIDAD DE ELEMENTOS QUE
SE ESPERA RECIBIR CON ESTA SECUENCIA.

- 3: EN MI CASO, DECIDI HACER LA SECUENCIA UTILIZANDO UN BUCLE
WHILE --> MIENTRAS I (CANTIDAD DE ELEMENTOS QUE TIENE LA LISTA)
NO SEA IGUAL A LA CANTIDAD DE ELEMENTOS QUE ESPERO QUE DEVUELVA
EL ALGORITMO (NUM), SE VA A REALIZAR LA ECUACION DEL SIGUIENTE PASO.

- 4: LA ECUACION QUE SE UTILIZA PARA ESTE ALGORITMO ES LA SIGUIENTE:

[0 , 1]

LA LONGITUD DE ESTA LISTA ES DE 2 OBJETOS, CADA OBJETO LLEVA UN INDICE
QUE PUEDE SER USADO PARA ACCEDER A ESTOS OBJETOS.

TENIENDO EN CUENTA QUE EL TIPO DE DATO DE ESTOS ELEMENTOS ES INT(ENTERO), QUE EN
LA SECUENCIA DE FIBONACCI CADA TERMINO SUCESIVO ES LA SUMA DE LOS DOS TERMINOS ANTERIORES
Y QUE PARA ACCEDER A UNA LISTA SE UTILIZA UN INDICE QUE EMPIEZA EN CERO,
PODEMOS REALIZAR LA SIGUIENTE CONCLUSION:

LONGITUD DE LA LISTA - 1 == INDICE DEL ULTIMO ELEMENTO
LONGITUD DE LA LISTA - 2 == INDICE DEL ANTE ULTIMO ELEMENTO

POR LO QUE LA ECUACION DEL TERMINO SIGUIENTE ES LA SUMA DE ESTOS DOS INDICES.

- 5: LA COMPROBACION DE QUE LA LONGITUD DE LA LISTA SEA LA DESEADA ES REALIZADA AUTOMATICAMENTE
HASTA QUE SEA VERDADERA LA RESPUESTA Y EL BUCLE SE DETENGA!.


FIBONACCI SEQUENCE

EXPLANATION:

- 1: INDICATE THE START WITH A LIST, THE LIST
IT MUST HAVE 0 AND 1 IN ITS CONTENT, NECESSARY NUMBERS
TO START WITH THE SPIRAL.

- 2: THE SECOND STEP IS TO INDICATE THE QUANTITY OF ELEMENTS THAT
IT IS EXPECTED TO RECEIVE WITH THIS SEQUENCE.

- 3: IN MY CASE, I DECIDED TO MAKE THE SEQUENCE USING A LOOP
WHILE --> WHILE I (NUMBER OF ELEMENTS IN THE LIST)
NOT EQUAL THE NUMBER OF ITEMS I EXPECT YOU TO RETURN
THE ALGORITHM (NUM), IS GOING TO MAKE THE EQUATION OF THE NEXT STEP.

- 4: THE EQUATION USED FOR THIS ALGORITHM IS THE FOLLOWING:
[0 , 1]

THE LENGTH OF THIS LIST IS 2 OBJECTS, EACH OBJECT CARRIES AN INDEX
WHICH CAN BE USED TO ACCESS THESE OBJECTS.

TAKING INTO ACCOUNT THAT THE DATA TYPE OF THESE ELEMENTS IS INT(INT), WHICH IN
THE FIBONACCI SEQUENCE EACH SUCCESSIVE TERM IS THE SUM OF THE PREVIOUS TWO TERMS
AND THAT TO ACCESS A LIST AN INDEX THAT STARTS AT ZERO IS USED,
WE CAN MAKE THE FOLLOWING CONCLUSION:

LENGTH OF LIST - 1 == INDEX OF LAST ELEMENT

LENGTH OF LIST - 2 == INDEX OF PRE LAST ELEMENT

SO THE EQUATION OF THE FOLLOWING TERM IS THE SUM OF THESE TWO INDICES.

- 5: THE VERIFICATION THAT THE LENGTH OF THE LIST IS THE DESIRED IS PERFORMED AUTOMATICALLY
UNTIL THE ANSWER IS TRUE AND THE LOOP STOPS!

JZ9 DEV

"""

print("JZ9 FIBONACCI")

fb = [0,1]
i = len(fb)

def __main__(fb, i):
    try:
        num = int(input("Quantity: "))
    except:
        print("Insert a number!")
        return __main__(fb, i)
    
    while i+1 != int(num):
        i = len(fb)
        f = fb[i-1] + fb[i-2]
        fb.append(f)
    print(fb)
    return __main__(fb, i)

__main__(fb, i)
